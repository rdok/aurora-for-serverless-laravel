
AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Aurora Serverless DB Cluster
Parameters:
  AuroraVpcId:
    Type: AWS::EC2::VPC::Id
Resources:
  Secrets:
    Type: "AWS::SecretsManager::Secret"
    Properties:
      Name: !Join ["-", [!Ref AWS::StackName, "secrets"]]
      GenerateSecretString:
        PasswordLength: 30
        ExcludeCharacters: '"@/\'
        SecretStringTemplate: '{"username": "admin"}'
        GenerateStringKey: "password"
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Ref AWS::StackName
      GroupDescription: 'The security group for Aurora.'
      VpcId: !Ref AuroraVpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0
  Aurora:
    Type: 'AWS::RDS::DBCluster'
    Properties:
      VpcSecurityGroupIds: [!GetAtt SecurityGroup.GroupId]
      MasterUsername: !Join ['', ['{{resolve:secretsmanager:', !Ref Secrets, ':SecretString:username}}' ]]
      MasterUserPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref Secrets, ':SecretString:password}}' ]]
      DBClusterIdentifier: !Ref "AWS::StackName"
      Engine: aurora-mysql
      EngineVersion: 5.7.12
      EngineMode: serverless
      ScalingConfiguration:
        AutoPause: true
        MinCapacity: 1
        MaxCapacity: 1
        SecondsUntilAutoPause: 300
  LinkSecretsToAurora:
    Type: "AWS::SecretsManager::SecretTargetAttachment"
    Properties:
      SecretId: !Ref Secrets
      TargetId: !Ref Aurora
      TargetType: AWS::RDS::DBCluster
Outputs:
  DBHost:
    Value: !GetAtt Aurora.Endpoint.Address
  SecretsARN:
    Value: !Ref Secrets
